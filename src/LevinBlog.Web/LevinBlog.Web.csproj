<Project ToolsVersion="15.0" Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework Condition="'$(TargetFrameworkOverride)' == ''">netcoreapp2.0</TargetFramework>
    <TargetFramework Condition="'$(TargetFrameworkOverride)' != ''">TargetFrameworkOverride</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <IsPackable>false</IsPackable>
    <TypeScriptToolsVersion>2.5</TypeScriptToolsVersion>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <Configurations>Debug;Production</Configurations>
    <ApplicationInsightsResourceId>/subscriptions/a07802f5-f8df-47d8-9b88-79ba55cfb396/resourcegroups/LevinBlog/providers/microsoft.insights/components/LevinBlog</ApplicationInsightsResourceId>
    <ApplicationInsightsAnnotationResourceId>/subscriptions/a07802f5-f8df-47d8-9b88-79ba55cfb396/resourcegroups/LevinBlog/providers/microsoft.insights/components/LevinBlog</ApplicationInsightsAnnotationResourceId>
    <UserSecretsId>c71df131-ecd9-42b6-aed1-fe6212351878</UserSecretsId>
    <AutoGenerateBindingRedirects>True</AutoGenerateBindingRedirects>
  </PropertyGroup>
   <ItemGroup>
    <!-- Files not to show in IDE -->
    <None Remove="Properties\PublishProfiles\CustomProfile.pubxml" />
    <None Remove="Properties\PublishProfiles\LevinBlog - Web Deploy.pubxml" />
    <None Remove="Properties\PublishProfiles\LevinBlogWeb20180206121046 - Web Deploy.pubxml" />
    <None Remove="yarn.lock" />
    <Content Remove="wwwroot\dist\**" />
    <None Remove="ClientApp\dist\**" />
    <Content Remove="coverage\**" />

    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Content Remove="ClientApp\**" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFrameworkOverride)' == ''">
    <PackageReference Include="Microsoft.AspNetCore.App" />
     <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.1" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <Content Remove="package-lock.json" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="ApplicationInsightsTelemetryExtensions" Version="0.2.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.3.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.SnapshotCollector" Version="1.3.0" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.HostingStartup" Version="2.1.1" />
    <PackageReference Include="Robotify.AspNetCore" Version="0.2.3" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="2.5.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\LevinBlog.Database\LevinBlog.Database.csproj" />
    <ProjectReference Include="..\LevinBlog.Model\LevinBlog.Model.csproj" />
    <ProjectReference Include="..\LevinBlog.Repository\LevinBlog.Repository.csproj" />
    <ProjectReference Include="..\LevinBlog.Service\LevinBlog.Service.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\PublishProfiles\" />
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Connected Services" />
  </ItemGroup>
  <!--/-:cnd:noEmit -->
  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <!--<Exec Command="npm install" />-->
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <!--<Exec Command="npm install" />-->
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  <Target Name="CleanDist" AfterTargets="Clean">
    <ItemGroup>
      <FilesToDelete Include="ClientApp\dist\**; wwwroot\dist\**" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
    <RemoveDir Directories="Client\dist; wwwroot\dist" />
  </Target>
</Project>
